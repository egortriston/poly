// –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –ø–µ—Ä–µ–¥–∞—á–∏ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
const fetch = require('node-fetch');

const BASE_URL = 'http://localhost:3000/api';

async function testUserIdTransmission() {
    console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–µ—Ä–µ–¥–∞—á–∏ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...\n');

    const testUserId = 2; // –¢–µ—Å—Ç–æ–≤—ã–π ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

    try {
        // 1. –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –º–∞—Ç–µ—Ä–∏–∞–ª–∞ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        console.log('1. –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –º–∞—Ç–µ—Ä–∏–∞–ª–∞...');
        const materialFormData = new FormData();
        materialFormData.append('title', '–¢–µ—Å—Ç–æ–≤—ã–π –º–∞—Ç–µ—Ä–∏–∞–ª');
        materialFormData.append('type', '–ú–µ—Ç–æ–¥–∏—á–µ—Å–∫–æ–µ –ø–æ—Å–æ–±–∏–µ');
        materialFormData.append('category', '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –Ω–∞—É–∫–∏');
        materialFormData.append('author', '–¢–µ—Å—Ç–æ–≤—ã–π –∞–≤—Ç–æ—Ä');
        materialFormData.append('shortDescription', '–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ');
        materialFormData.append('description', '–ü–æ–ª–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª–∞');
        materialFormData.append('link', 'https://example.com');
        materialFormData.append('keywords', '—Ç–µ—Å—Ç, –º–∞—Ç–µ—Ä–∏–∞–ª');
        materialFormData.append('userId', testUserId);

        const materialResponse = await fetch(`${BASE_URL}/materials`, {
            method: 'POST',
            headers: {
                'X-User-ID': testUserId
            },
            body: materialFormData
        });
        
        const materialData = await materialResponse.json();
        console.log('–û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞ (–º–∞—Ç–µ—Ä–∏–∞–ª):', materialData);
        console.log('‚úÖ –ú–∞—Ç–µ—Ä–∏–∞–ª —Å–æ–∑–¥–∞–Ω\n');

        // 2. –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ—Å—Ç–∏ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        console.log('2. –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ—Å—Ç–∏...');
        const newsFormData = new FormData();
        newsFormData.append('title', '–¢–µ—Å—Ç–æ–≤–∞—è –Ω–æ–≤–æ—Å—Ç—å');
        newsFormData.append('category', '–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ');
        newsFormData.append('publicationDate', '2024-01-15');
        newsFormData.append('content', '–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–π –Ω–æ–≤–æ—Å—Ç–∏');
        newsFormData.append('author', '–¢–µ—Å—Ç–æ–≤—ã–π –∞–≤—Ç–æ—Ä');
        newsFormData.append('source', 'https://example.com');
        newsFormData.append('userId', testUserId);

        const newsResponse = await fetch(`${BASE_URL}/news`, {
            method: 'POST',
            headers: {
                'X-User-ID': testUserId
            },
            body: newsFormData
        });
        
        const newsData = await newsResponse.json();
        console.log('–û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞ (–Ω–æ–≤–æ—Å—Ç—å):', newsData);
        console.log('‚úÖ –ù–æ–≤–æ—Å—Ç—å —Å–æ–∑–¥–∞–Ω–∞\n');

        // 3. –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è —Å–æ–±—ã—Ç–∏—è —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        console.log('3. –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è —Å–æ–±—ã—Ç–∏—è...');
        const eventFormData = new FormData();
        eventFormData.append('eventName', '–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–±—ã—Ç–∏–µ');
        eventFormData.append('eventType', '–ö–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏—è');
        eventFormData.append('eventCategory', '–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ');
        eventFormData.append('startDate', '2024-02-01');
        eventFormData.append('endDate', '2024-02-02');
        eventFormData.append('startTime', '10:00');
        eventFormData.append('eventLocation', '–°–ü–±–ü–£');
        eventFormData.append('eventDescription', '–û–ø–∏—Å–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–±—ã—Ç–∏—è');
        eventFormData.append('targetAudience', '–°—Ç—É–¥–µ–Ω—Ç—ã');
        eventFormData.append('additionalInfo', '–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è');
        eventFormData.append('userId', testUserId);

        const eventResponse = await fetch(`${BASE_URL}/events`, {
            method: 'POST',
            headers: {
                'X-User-ID': testUserId
            },
            body: eventFormData
        });
        
        const eventData = await eventResponse.json();
        console.log('–û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞ (—Å–æ–±—ã—Ç–∏–µ):', eventData);
        console.log('‚úÖ –°–æ–±—ã—Ç–∏–µ —Å–æ–∑–¥–∞–Ω–æ\n');

        // 4. –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–≥—Ä–∞–º–º—ã —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        console.log('4. –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–≥—Ä–∞–º–º—ã...');
        const programFormData = new FormData();
        programFormData.append('programName', '–¢–µ—Å—Ç–æ–≤–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞');
        programFormData.append('programType', '–ú–∞–≥–∏—Å—Ç—Ä–∞—Ç—É—Ä–∞');
        programFormData.append('resourceLink', 'https://example.com');
        programFormData.append('programDescription', '–û–ø–∏—Å–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã');
        programFormData.append('additionalInfo', '–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è');
        programFormData.append('userId', testUserId);

        const programResponse = await fetch(`${BASE_URL}/programs`, {
            method: 'POST',
            headers: {
                'X-User-ID': testUserId
            },
            body: programFormData
        });
        
        const programData = await programResponse.json();
        console.log('–û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞ (–ø—Ä–æ–≥—Ä–∞–º–º–∞):', programData);
        console.log('‚úÖ –ü—Ä–æ–≥—Ä–∞–º–º–∞ —Å–æ–∑–¥–∞–Ω–∞\n');

        // 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–Ω—Ç–µ–Ω—Ç —Å–æ–∑–¥–∞–ª—Å—è —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        console.log('5. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');
        
        const userMaterialsResponse = await fetch(`${BASE_URL}/materials/user/${testUserId}`);
        const userMaterialsData = await userMaterialsResponse.json();
        console.log('–ú–∞—Ç–µ—Ä–∏–∞–ª—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', userMaterialsData);

        const userNewsResponse = await fetch(`${BASE_URL}/news/user/${testUserId}`);
        const userNewsData = await userNewsResponse.json();
        console.log('–ù–æ–≤–æ—Å—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', userNewsData);

        const userEventsResponse = await fetch(`${BASE_URL}/events/user/${testUserId}`);
        const userEventsData = await userEventsResponse.json();
        console.log('–°–æ–±—ã—Ç–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', userEventsData);

        const userProgramsResponse = await fetch(`${BASE_URL}/programs/user/${testUserId}`);
        const userProgramsData = await userProgramsResponse.json();
        console.log('–ü—Ä–æ–≥—Ä–∞–º–º—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', userProgramsData);

        console.log('‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞\n');

        console.log('üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!');
        console.log('\nüìã –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:');
        console.log(`- ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —Ç–µ—Å—Ç–æ–≤: ${testUserId}`);
        console.log('- –í—Å–µ —Ñ–æ—Ä–º—ã —Ç–µ–ø–µ—Ä—å –ø–µ—Ä–µ–¥–∞—é—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
        console.log('- Middleware –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∏–∑–≤–ª–µ–∫–∞–µ—Ç ID –∏–∑ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤');
        console.log('- –ö–æ–Ω—Ç–µ–Ω—Ç —Å–æ–∑–¥–∞–µ—Ç—Å—è —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');

    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error.message);
    }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
testUserIdTransmission();
